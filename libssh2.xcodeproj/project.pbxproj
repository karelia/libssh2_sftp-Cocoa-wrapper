// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		800802EB1667F715004D39F5 /* libssh2 */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 800802EE1667F715004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2" */;
			buildPhases = (
				8008030716684F71004D39F5 /* Run Script - lipo multi-arch dylib */,
			);
			dependencies = (
				800802FE1667F836004D39F5 /* PBXTargetDependency */,
				800803001667F836004D39F5 /* PBXTargetDependency */,
				800803021667F836004D39F5 /* PBXTargetDependency */,
			);
			name = libssh2;
			productName = libssh2;
		};
		800802EF1667F731004D39F5 /* libssh2-clean */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 800802F01667F731004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-clean" */;
			buildPhases = (
				800803031667FA08004D39F5 /* Run Script - remove previous product dylibs */,
			);
			dependencies = (
			);
			name = "libssh2-clean";
			productName = "libssh2-clean";
		};
		800802F31667F73C004D39F5 /* libssh2-i386 */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 800802F41667F73C004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-i386" */;
			buildPhases = (
				800803041667FB34004D39F5 /* Run Script - Copy, Buildconf, Configure, Make */,
				8008030616684DFC004D39F5 /* Run Script - Rename + Install Name */,
			);
			dependencies = (
			);
			name = "libssh2-i386";
			productName = "libssh2-i386";
		};
		800802F71667F74A004D39F5 /* libssh2-x86_64 */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 800802F81667F74A004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-x86_64" */;
			buildPhases = (
				8008030816685155004D39F5 /* Run Script - Copy, Buildconf, Configure, Make */,
				8008030916685196004D39F5 /* Run Script - Rename + Install Name */,
			);
			dependencies = (
			);
			name = "libssh2-x86_64";
			productName = "libssh2-x86_64";
		};
/* End PBXAggregateTarget section */

/* Begin PBXContainerItemProxy section */
		800802FD1667F836004D39F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 800802E51667F6D5004D39F5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 800802EF1667F731004D39F5;
			remoteInfo = "libssh2-clean";
		};
		800802FF1667F836004D39F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 800802E51667F6D5004D39F5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 800802F31667F73C004D39F5;
			remoteInfo = "libssh2-i386";
		};
		800803011667F836004D39F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 800802E51667F6D5004D39F5 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 800802F71667F74A004D39F5;
			remoteInfo = "libssh2-x86_64";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		800802FB1667F796004D39F5 /* libssh2-README.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = "libssh2-README.txt"; sourceTree = "<group>"; };
		800802FC1667F7CF004D39F5 /* libssh2 */ = {isa = PBXFileReference; lastKnownFileType = folder; path = libssh2; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		800802E41667F6D5004D39F5 = {
			isa = PBXGroup;
			children = (
				800802FB1667F796004D39F5 /* libssh2-README.txt */,
				800802FC1667F7CF004D39F5 /* libssh2 */,
			);
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		800802E51667F6D5004D39F5 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
			};
			buildConfigurationList = 800802E81667F6D5004D39F5 /* Build configuration list for PBXProject "libssh2" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 800802E41667F6D5004D39F5;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				800802EB1667F715004D39F5 /* libssh2 */,
				800802EF1667F731004D39F5 /* libssh2-clean */,
				800802F31667F73C004D39F5 /* libssh2-i386 */,
				800802F71667F74A004D39F5 /* libssh2-x86_64 */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		800803031667FA08004D39F5 /* Run Script - remove previous product dylibs */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - remove previous product dylibs";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Clean original source dir, just in case.\ncd \"${SRCROOT}/libssh2\"\necho \"Please ignore any messages about \\\"No rule to make target distclean.\\\" That just means the build dir is already clean.\"\nmake distclean\n\n# Remove final output files from previous run.\ncd \"${SRCROOT}\"\nrm -f  \"libssh2.dylib\"\nrm -Rf \"libssh2.dylib.dSYM\"\n\n# Remove intermediate output files from previous run.\nrm -f  \"${OBJROOT}/libssh2.dylib\"\nrm -Rf \"${OBJROOT}/libssh2.dylib.dSYM\"\n\n# Remove build dirs from previous run.\nrm -Rf \"${OBJROOT}/libssh2-i386\"\nrm -Rf \"${OBJROOT}/libssh2-x86_64\"\n";
			showEnvVarsInLog = 0;
		};
		800803041667FB34004D39F5 /* Run Script - Copy, Buildconf, Configure, Make */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - Copy, Buildconf, Configure, Make";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Copy source to a new location to build.\ncd \"${SRCROOT}\"\nmkdir -p \"${OBJROOT}\"\ncp -af libssh2 \"${OBJROOT}/libssh2-i386\"\n\n# Buildconf\ncd \"${OBJROOT}/libssh2-i386\"\necho \"Please ignore any messages about \\\"No rule to make target distclean.\\\" That just means the build dir is already clean.\"\nmake distclean\n./buildconf\n\n# Configure\n./configure \\\n  CC=\"clang\" \\\n  CFLAGS=\"-isysroot ${SDKROOT} -I${SRCROOT}/openssl/include -arch i386 -g -w -mmacosx-version-min=10.6\" \\\n  LDFLAGS=\"-L${SRCROOT}\" \\\n  --host=i386-apple-darwin10 \\\n  --with-sysroot=${SDKROOT} \\\n  --with-openssl \\\n  --with-libz \\\n  --enable-shared \\\n  --disable-static \\\n  --disable-examples-build\n\n# Make\nmake\n";
			showEnvVarsInLog = 0;
		};
		8008030616684DFC004D39F5 /* Run Script - Rename + Install Name */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - Rename + Install Name";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Rename & remove extraneous files.\ncd \"${OBJROOT}/libssh2-i386/src/.libs\"\ncp -f libssh2.dylib libssh2-i386.dylib\n\n## Preserve .a files name & location. They are needed by dsymutil later.\n## libcrypto.a, libssl.a\n# this may apply to libssh2-symbols.expsym for libssh2\n\n# Correct the install name of the dylibs & add an rpath.\ninstall_name_tool -id @rpath/libssh2.dylib libssh2-i386.dylib\ninstall_name_tool -add_rpath @loader_path/../Frameworks libssh2-i386.dylib\n";
			showEnvVarsInLog = 0;
		};
		8008030716684F71004D39F5 /* Run Script - lipo multi-arch dylib */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - lipo multi-arch dylib";
			outputPaths = (
				"${SRCROOT}/libssh2.dylib",
				"${SRCROOT}/libssh2.dylib.dSYM",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Create final dylibs.\ncd \"${OBJROOT}\"\nlipo -create \\\n  -arch i386 libssh2-i386/src/.libs/libssh2-i386.dylib \\\n  -arch x86_64 libssh2-x86_64/src/.libs/libssh2-x86_64.dylib \\\n  -output libssh2.dylib\n\n# Create dSYMs\n# NOTE: dsymutil depends on the following files still being in the same place and having the same name:\n#   openssl-i386/libcrypto.a, openssl-i386/libssl.a, openssl-x86_64/libcrypto.a, openssl-x86_64/libssl.a\ndsymutil libssh2.dylib\n\n# Strip dylibs\nstrip -x libssh2.dylib\n\n# Final output to project dir, not source/build dir.\ncp -f  libssh2.dylib      \"${SRCROOT}\"\ncp -Rf libssh2.dylib.dSYM \"${SRCROOT}\"\n\n# Remove build dirs.\nrm -Rf \"${OBJROOT}/libssh2-i386\"\nrm -Rf \"${OBJROOT}/libssh2-x86_64\"\n";
			showEnvVarsInLog = 0;
		};
		8008030816685155004D39F5 /* Run Script - Copy, Buildconf, Configure, Make */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - Copy, Buildconf, Configure, Make";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Copy source to a new location to build.\ncd \"${SRCROOT}\"\nmkdir -p \"${OBJROOT}\"\ncp -af libssh2 \"${OBJROOT}/libssh2-x86_64\"\n\n# Buildconf\ncd \"${OBJROOT}/libssh2-x86_64\"\necho \"Please ignore any messages about \\\"No rule to make target distclean.\\\" That just means the build dir is already clean.\"\nmake distclean\n./buildconf\n\n# Configure\n./configure \\\nCC=\"clang\" \\\nCFLAGS=\"-isysroot ${SDKROOT} -I${SRCROOT}/openssl/include -arch x86_64 -g -w -mmacosx-version-min=10.6\" \\\nLDFLAGS=\"-L${SRCROOT}\" \\\n--host=x86_64-apple-darwin10 \\\n--with-sysroot=${SDKROOT} \\\n--with-openssl \\\n--with-libz \\\n--enable-shared \\\n--disable-static \\\n--disable-examples-build\n\n# Make\nmake\n";
			showEnvVarsInLog = 0;
		};
		8008030916685196004D39F5 /* Run Script - Rename + Install Name */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - Rename + Install Name";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/bash;
			shellScript = "# glibtoolize (and maybe other tools) are not supplied with OS X.\n# Add default macports & homebrew paths in attempt to find them.\nexport PATH=${PATH}:/opt/local/bin:/usr/local/bin\n\n# Rename & remove extraneous files.\ncd \"${OBJROOT}/libssh2-x86_64/src/.libs\"\ncp -f libssh2.dylib libssh2-x86_64.dylib\n\n## Preserve .a files name & location. They are needed by dsymutil later.\n## libcrypto.a, libssl.a\n# this may apply to libssh2-symbols.expsym for libssh2\n\n# Correct the install name of the dylibs and add an rpath.\ninstall_name_tool -id @rpath/libssh2.dylib libssh2-x86_64.dylib\ninstall_name_tool -add_rpath @loader_path/../Frameworks libssh2-x86_64.dylib\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXTargetDependency section */
		800802FE1667F836004D39F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 800802EF1667F731004D39F5 /* libssh2-clean */;
			targetProxy = 800802FD1667F836004D39F5 /* PBXContainerItemProxy */;
		};
		800803001667F836004D39F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 800802F31667F73C004D39F5 /* libssh2-i386 */;
			targetProxy = 800802FF1667F836004D39F5 /* PBXContainerItemProxy */;
		};
		800803021667F836004D39F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 800802F71667F74A004D39F5 /* libssh2-x86_64 */;
			targetProxy = 800803011667F836004D39F5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		800802E91667F6D5004D39F5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		800802EA1667F6D5004D39F5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				SDKROOT = macosx;
			};
			name = Release;
		};
		800802EC1667F715004D39F5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		800802ED1667F715004D39F5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		800802F11667F731004D39F5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		800802F21667F731004D39F5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		800802F51667F73C004D39F5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				VALID_ARCHS = i386;
			};
			name = Debug;
		};
		800802F61667F73C004D39F5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				VALID_ARCHS = i386;
			};
			name = Release;
		};
		800802F91667F74A004D39F5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				VALID_ARCHS = x86_64;
			};
			name = Debug;
		};
		800802FA1667F74A004D39F5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				VALID_ARCHS = x86_64;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		800802E81667F6D5004D39F5 /* Build configuration list for PBXProject "libssh2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				800802E91667F6D5004D39F5 /* Debug */,
				800802EA1667F6D5004D39F5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		800802EE1667F715004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				800802EC1667F715004D39F5 /* Debug */,
				800802ED1667F715004D39F5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		800802F01667F731004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-clean" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				800802F11667F731004D39F5 /* Debug */,
				800802F21667F731004D39F5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		800802F41667F73C004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-i386" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				800802F51667F73C004D39F5 /* Debug */,
				800802F61667F73C004D39F5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		800802F81667F74A004D39F5 /* Build configuration list for PBXAggregateTarget "libssh2-x86_64" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				800802F91667F74A004D39F5 /* Debug */,
				800802FA1667F74A004D39F5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 800802E51667F6D5004D39F5 /* Project object */;
}
